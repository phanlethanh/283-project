package com.onlinestore.model;

// Generated Nov 29, 2014 12:31:44 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", schema = "public")
public class Product implements java.io.Serializable {

	private int id;
	private Price price;
	private Promotion promotion;
	private Status status;
	private Producer producer;
	private String name;
	private String description;
	private String gallery;
	private Date createDate;
	private Date writeDate;
	private Boolean active;
	private Set<OsOrderDetail> osOrderDetails = new HashSet<OsOrderDetail>(0);
	private Set<CategoryProduct> categoryProducts = new HashSet<CategoryProduct>(
			0);

	public Product() {
	}

	public Product(int id) {
		this.id = id;
	}

	public Product(int id, Price price, Promotion promotion, Status status,
			Producer producer, String name, String description, String gallery,
			Date createDate, Date writeDate, Boolean active,
			Set<OsOrderDetail> osOrderDetails,
			Set<CategoryProduct> categoryProducts) {
		this.id = id;
		this.price = price;
		this.promotion = promotion;
		this.status = status;
		this.producer = producer;
		this.name = name;
		this.description = description;
		this.gallery = gallery;
		this.createDate = createDate;
		this.writeDate = writeDate;
		this.active = active;
		this.osOrderDetails = osOrderDetails;
		this.categoryProducts = categoryProducts;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "price_id")
	public Price getPrice() {
		return this.price;
	}

	public void setPrice(Price price) {
		this.price = price;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "promotion_id")
	public Promotion getPromotion() {
		return this.promotion;
	}

	public void setPromotion(Promotion promotion) {
		this.promotion = promotion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status_id")
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "producer_id")
	public Producer getProducer() {
		return this.producer;
	}

	public void setProducer(Producer producer) {
		this.producer = producer;
	}

	@Column(name = "name", length = 32)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 256)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "gallery", length = 32)
	public String getGallery() {
		return this.gallery;
	}

	public void setGallery(String gallery) {
		this.gallery = gallery;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 29)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "write_date", length = 29)
	public Date getWriteDate() {
		return this.writeDate;
	}

	public void setWriteDate(Date writeDate) {
		this.writeDate = writeDate;
	}

	@Column(name = "active")
	public Boolean getActive() {
		return this.active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<OsOrderDetail> getOsOrderDetails() {
		return this.osOrderDetails;
	}

	public void setOsOrderDetails(Set<OsOrderDetail> osOrderDetails) {
		this.osOrderDetails = osOrderDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<CategoryProduct> getCategoryProducts() {
		return this.categoryProducts;
	}

	public void setCategoryProducts(Set<CategoryProduct> categoryProducts) {
		this.categoryProducts = categoryProducts;
	}

}
